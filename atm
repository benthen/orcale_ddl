SELECT * FROM ACCOUNT;
CREATE TABLE ACCOUNT
(
    ID NUMBER(5) NOT NULL,
    NAME VARCHAR2(255),
    BALANCE NUMBER(10,2),
    CREATION_DATE DATE
);

CREATE TABLE LOG_DEPOSIT
(
    ID NUMBER(5) NOT NULL,
    BALANCE_OLD NUMBER(10,2),
    BALANCE_NEW NUMBER(10,2),
    CREATION_DATE DATE
);

CREATE TABLE LOG_WITHDRAW
(
    ID NUMBER(5) NOT NULL,
    BALANCE_OLD NUMBER(10,2),
    BALANCE_NEW NUMBER(10,2),
    CREATION_DATE DATE
);

CREATE TABLE LOG_TRANSFER
(
    SOURCE_ID NUMBER(5) NOT NULL,
    TARGET_ID NUMBER(5) NOT NULL,
    AMOUNT NUMBER,
    CRREATION_DATE DATE
);

INSERT INTO ACCOUNT VALUES (10001, 'BEN', 0, CURRENT_DATE);
INSERT INTO ACCOUNT VALUES (10002, 'THEN', 0, CURRENT_DATE);

CREATE OR REPLACE PROCEDURE DEPOSIT_MONEY
(ACC_ID NUMBER, AMOUNT NUMBER)
AS
BEGIN
    UPDATE ACCOUNT SET BALANCE = BALANCE + AMOUNT WHERE ID = ACC_ID;
END;

CREATE OR REPLACE PROCEDURE WITHDRAW_MONEY
(ACC_ID NUMBER, AMOUNT NUMBER)
AS
BEGIN
    UPDATE ACCOUNT SET BALANCE = BALANCE - AMOUNT WHERE ID = ACC_ID;
END;

CREATE OR REPLACE PROCEDURE TRANSFER_MONEY
(ACC1 NUMBER, ACC2 NUMBER, AMOUNT NUMBER)
AS
BEGIN
    UPDATE ACCOUNT SET BALANCE = BALANCE + AMOUNT WHERE ID = ACC2;
    UPDATE ACCOUNT SET BALANCE = BALANCE - AMOUNT WHERE ID = ACC1;
    INSERT INTO LOG_TRANSFER VALUES (ACC1, ACC2, AMOUNT, CURRENT_DATE);
END;

CREATE OR REPLACE TRIGGER DEPOSIT_LOG
BEFORE UPDATE ON ACCOUNT
FOR EACH ROW
BEGIN
    IF :OLD.BALANCE < :NEW.BALANCE THEN
        INSERT INTO LOG_DEPOSIT VALUES (:OLD.ID, :OLD.BALANCE, :NEW.BALANCE, CURRENT_DATE);
    END IF;
END;

CREATE OR REPLACE TRIGGER WITHDRAW_LOG
BEFORE UPDATE ON ACCOUNT
FOR EACH ROW
BEGIN
    IF :OLD.BALANCE > :NEW.BALANCE THEN
        INSERT INTO LOG_DEPOSIT VALUES (:OLD.ID, :OLD.BALANCE, :NEW.BALANCE, CURRENT_DATE);
    END IF;
END;

CREATE VIEW DEPOSIT_VIEW AS
SELECT CREATION_DATE, ID, 'DP' AS "TRANS TYPE", (BALANCE_NEW - BALANCE_OLD) AS AMOUNT, BALANCE_NEW
FROM LOG_DEPOSIT;

CREATE VIEW WITHDRAW_VIEW AS 
SELECT CREATION_DATE, ID, 'WD' AS "TRANS TYPE", (BALANCE_OLD - BALANCE_NEW) AS AMOUNT, BALANCE_NEW
FROM LOG_WITHDRAW;

COMMIT;

